# name definition 
LIBDIRNAME=Lib
LIBNAME=libcommon.a
# 拡張子の指定
SRCEXT=cpp
HEADEXT=h

# command definition
CPP = g++

# directory definition
SRCDIR=../src
OBJDIR=../obj
BINDIR=../bin
TESTDIR=../test
LIBBASEDIR=../../$(LIBDIRNAME)
LIBSRCDIR=$(LIBBASEDIR)/src
LIBOBJDIR=$(LIBBASEDIR)/obj
CMNLIB=$(LIBBASEDIR)/bin/$(LIBNAME)

# flag definition
GCOVFLAGS=-fprofile-arcs -ftest-coverage
X64FLAGS=-m64
WARNFLAGS_DBG=-Wall -Wextra -Wundef
WARNFLAGS_REL=-Wall -Werror
# デバッグビルド時のフラグ（プロジェクト毎の設定）
CXXFLAGS_DBG = -g -fPIC -DGLOG -D_DEBUG $(WARNFLAGS_DBG) $(X64FLAGS) $(GCOVFLAGS)
# リリースビルド時のフラグ（プロジェクト毎の設定）
CXXFLAGS_REL = -O3 -msse4 -mfpmath=sse -fno-strict-aliasing -DNDEBUG $(WARNFLAGS_REL) $(X64FLAGS)
# テストコードビルド時のフラグ
TESTFLAGS=$(shell pkg-config --cflags cppcutter)

INCLUDES = -I. -I$(SRCDIR) -I$(LIBSRCDIR)
LDPATH=#-L. -L/lib -L/usr/lib

# library link definition
# リンクが必須のライブラリ（プロジェクト毎の設定）
BASELIBS = -lpthread -lm -lrt
# デバッグ用のライブラリ
DEBUGLIBS = -lgcov -lglog
# テストコードのビルドに必要なライブラリ
TESTLIBS = -lgtest -lgtest_main -lcutter

# デバッグビルド時のリンクするライブラリ
LIBS_DBG = $(BASELIBS) $(DEBUGLIBS)
# リリースビルド時のリンクするライブラリ
LIBS_REL = $(BASELIBS)
# テストコードビルド時のリンクするライブラリ
LIBS_TST = $(BASELIBS) $(DEBUGLIBS) $(TESTLIBS)

# source code
BUILDSRC=$(shell ls *.$(SRCEXT))
LIBSRC=$(shell ls $(LIBSRCDIR)/*.$(SRCEXT) )

